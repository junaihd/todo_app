{"ast":null,"code":"var _jsxFileName = \"E:\\\\Learning_js\\\\todo_app\\\\todo-app\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport ToDo from './ToDo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue);\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the plan for Today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToDo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["E:/Learning_js/todo_app/todo-app/src/components/TodoList.js"],"names":["React","useState","TodoForm","ToDo","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","removeTodo","id","removeArr","filter","completeTodo","updatedTodos","map","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAGC,IAAI,IAAI;AACpB,QAAG,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,EAA0C;AACtC;AACH;;AAED,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AAEAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,GARD;;AAUA,QAAMC,UAAU,IAAIC,MAAM,EAAEC,QAAZ,CAAhB;;AAEA,QAAMC,UAAU,GAAGC,EAAE,IAAI;AACrB,UAAMC,SAAS,GAAG,CAAC,GAAGZ,KAAJ,EAAWa,MAAX,CAAkBV,IAAI,IAAIA,IAAI,CAACQ,EAAL,KAAYA,EAAtC,CAAlB;AAEAV,IAAAA,QAAQ,CAACW,SAAD,CAAR;AACH,GAJD;;AAMA,QAAME,YAAY,GAAGH,EAAE,IAAI;AACvB,QAAII,YAAY,GAAGf,KAAK,CAACgB,GAAN,CAAUb,IAAI,IAAI;AACjC,UAAIA,IAAI,CAACQ,EAAL,KAAYA,EAAhB,EAAoB;AAChBR,QAAAA,IAAI,CAACc,UAAL,GAAkB,CAACd,IAAI,CAACc,UAAxB;AACH;;AACD,aAAOd,IAAP;AACH,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACc,YAAD,CAAR;AACH,GARD;;AAUF,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEb;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,KAAb;AAAoB,MAAA,YAAY,EAAEc,YAAlC;AAAgD,MAAA,UAAU,EAAEJ;AAA5D;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAtCQX,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport ToDo from './ToDo';\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) \r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr);\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <h1>What's the plan for Today?</h1>\r\n        <TodoForm onSubmit={addTodo}/>\r\n        <ToDo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList"]},"metadata":{},"sourceType":"module"}