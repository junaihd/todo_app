{"ast":null,"code":"var _jsxFileName = \"E:\\\\Learning_js\\\\todo_app\\\\todo-app\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  }); // useEffect(() => {\n  // // storing input\n  // localStorage.setItem(\"input\", JSON.stringify(input));\n  // }, [input]);\n  // const [input, setInput] = useState(() => {\n  //   // getting stored value\n  //   const saved = localStorage.getItem(\"input\");\n  //   const initialValue = JSON.parse(saved);\n  //   return initialValue || \"\";\n  // });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"todo-input\",\n        placeholder: \"Update your item\",\n        value: input,\n        name: \"text\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button edit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"todo-input\",\n        placeholder: \"Add a todo\",\n        value: input,\n        name: \"text\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"xbvrlj5lrJII/vsr6NCUo81spDI=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["E:/Learning_js/todo_app/todo-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;AAEA,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,CAAT,CALqB,CAQrB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMO,YAAY,GAAGF,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACG,cAAF;AAEAZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AACXC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADO;AAEXC,MAAAA,IAAI,EAAEjB;AAFK,KAAf;AAKAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GATD;;AAWF,sBACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAES,YAAtC;AAAA,cACCX,KAAK,CAACG,IAAN,gBACI;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AACD,QAAA,SAAS,EAAC,YADT;AAED,QAAA,WAAW,EAAC,kBAFX;AAGD,QAAA,KAAK,EAAEF,KAHN;AAID,QAAA,IAAI,EAAC,MAJJ;AAKD,QAAA,QAAQ,EAAEO,YALT;AAMD,QAAA,GAAG,EAAEH;AANJ;AAAA;AAAA;AAAA;AAAA,cADA,eASH;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATG;AAAA,oBADJ,gBAcC;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,SAAS,EAAC,YADV;AAEA,QAAA,WAAW,EAAC,YAFZ;AAGA,QAAA,KAAK,EAAEJ,KAHP;AAIA,QAAA,IAAI,EAAC,MAJL;AAKA,QAAA,QAAQ,EAAEO,YALV;AAMA,QAAA,GAAG,EAAEH;AANL;AAAA;AAAA;AAAA;AAAA,cADA,eASF;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATE;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAlEQN,Q;;KAAAA,Q;AAoET,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    });\r\n    // useEffect(() => {\r\n    // // storing input\r\n    // localStorage.setItem(\"input\", JSON.stringify(input));\r\n    // }, [input]);\r\n\r\n    // const [input, setInput] = useState(() => {\r\n    //   // getting stored value\r\n    //   const saved = localStorage.getItem(\"input\");\r\n    //   const initialValue = JSON.parse(saved);\r\n    //   return initialValue || \"\";\r\n    // });\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input\r\n        });\r\n\r\n        setInput('');\r\n    };\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n    {props.edit ? (\r\n         <>\r\n         <input type=\"text\"\r\n        className=\"todo-input\"\r\n        placeholder=\"Update your item\"\r\n        value={input}\r\n        name=\"text\"\r\n        onChange={handleChange}\r\n        ref={inputRef}\r\n      />\r\n      <button className=\"todo-button edit\">Update</button>\r\n      </>\r\n      ) : \r\n      (\r\n      <>\r\n      <input type=\"text\"\r\n      className=\"todo-input\"\r\n      placeholder=\"Add a todo\"\r\n      value={input}\r\n      name=\"text\"\r\n      onChange={handleChange}\r\n      ref={inputRef}\r\n    />\r\n    <button className=\"todo-button\">Add todo</button>\r\n    </>\r\n    )}\r\n      \r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm"]},"metadata":{},"sourceType":"module"}