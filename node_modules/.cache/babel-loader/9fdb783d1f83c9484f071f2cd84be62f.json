{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nfunction ToDo(todos, completeTodo, removeTodo) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  }); //   return todos.map((todo, index) => (\n  //     <div \n  //     className={todo.isComplete ? 'todo-row complete' :'todo-row'}\n  //      key={index}\n  //      >\n  //     <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n  //         {todo.text}\n  //     </div>\n  //     <div className='icons'>\n  //         <RiCloseCircleLine \n  //         onClick={() => removeTodo(todo.id)}\n  //         className=\"delete-icon\"\n  //         />\n  //         <TiEdit onClick={() => setEdit({id: todo.id, value: todo.text})}\n  //         className=\"delete-icon\"\n  //         />\n  //     </div>\n  //      </div>\n  //   ));\n}\n\n_s(ToDo, \"Lk+zX9mM8RlzHTP2VTuh+tHke4Q=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["E:/Learning_js/todo_app/todo-app/src/components/ToDo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","ToDo","todos","completeTodo","removeTodo","edit","setEdit","id","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,MAAR,QAAqB,gBAArB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqBC,YAArB,EAAmCC,UAAnC,EAA+C;AAAA;;AAE3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAC7BU,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC,CAF2C,CAO/C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;GA3BQP,I;;KAAAA,I;AA6BT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport {TiEdit} from 'react-icons/ti'\r\n\r\nfunction ToDo(todos, completeTodo, removeTodo) {\r\n\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n//   return todos.map((todo, index) => (\r\n//     <div \r\n//     className={todo.isComplete ? 'todo-row complete' :'todo-row'}\r\n//      key={index}\r\n//      >\r\n\r\n//     <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n//         {todo.text}\r\n//     </div>\r\n//     <div className='icons'>\r\n//         <RiCloseCircleLine \r\n//         onClick={() => removeTodo(todo.id)}\r\n//         className=\"delete-icon\"\r\n//         />\r\n//         <TiEdit onClick={() => setEdit({id: todo.id, value: todo.text})}\r\n//         className=\"delete-icon\"\r\n//         />\r\n//     </div>\r\n//      </div>\r\n//   ));\r\n}\r\n\r\nexport default ToDo"]},"metadata":{},"sourceType":"module"}